{"Ide":"f70b23e3-9e30-47c2-b072-62debc53313b","Id":11,"Nome":"Vendas do Periodo com detalhe de Itens e faturamento","ComandoSql":"select\r\n  f.Nome [Filial Nome],\r\n  f.Endereco [Filial Endereco],\r\n  f.Num [Filial Numero],\r\n  f.Bairro [Filial Bairro],\r\n  f.Cidade [Filial Cidade],\r\n  f.CEP [Filial CEP],\r\n  f.UF [Filial UF],\r\n  fc.Data_Criacao [Abertura],\r\n  fc.Vencimento [Vencimento],\r\n  fc.Parcela_Descricao [Numero da Parcela],\r\n  fc.Parcela_Numero [Numero de Parcelas],\r\n  fc.Valor_Quitado [Valor Pago da Divida],\r\n  cf.Codigo [Codigo_Cliente],\r\n  cf.Nome [Cliente],\r\n  cf.CNPJ [CNPJ],\r\n  cf.Endereco [Cliente Endereco],\r\n  cf.Numero [Cliente Num Endereco],\r\n  cf.Cidade [Cliente Cidade],\r\n  cf.UF [Cliente UF],  \r\n  p.Codigo [Codigo do Produto],\r\n  p.Nome [Produro],\r\n  mp.Ide [mp Ide],\r\n  mp.Qtde [Quantidade Vendida do Produto],\r\n  mp.Valor_Final [Valor Total do Produto],\r\n  m.Ide [m Ide],\r\n  m.Data [Data do Movimento],\r\n  m.Sequencia [Sequencia],\r\n  m.Total_Final [m Total Final],\r\n  m.Vendedor__Codigo [Vendedor Cod],\r\n  m.Caixa__Codigo [Caixa Cod],\r\n  cx.Nome [Caixa Nome],\r\n  fu.Nome [Vendedor Nome],\r\n  mp.Valor_Unit [Valor por Unidade do Produto],\r\n  mp.Valor_Total [Total da Compra],\r\n  @$Data_Inicial#data [Data Inicial],\r\n  @$Data_Final#data [Data Final]\r\n from\r\n  Financeiro_Conta fc\r\n  left join Filial f on fc.Filial__Codigo = f.Codigo\r\n  left join Movimento m on fc.Movimento__Ide = m.Ide\r\n  left join Movimento_Produto mp on m.Ide = mp.Movimento__Ide\r\n  left join Produto p on mp.Produto__Ide = p.Ide\r\n  left join Cli_For cf on m.Cli_For__Ide = cf.Ide\r\n  left join Funcionario fu on fu.Ide = m.Vendedor__Ide\r\n  left join Caixas cx on cx.Codigo = m.Caixa__Codigo\r\n  --left join Movimento_Financeiro mf on m.Ide = mf.Movimento__Ide\r\n where\r\n  fc.Pagar_Receber like 'R' and\r\n  fc.tipo like 'P' and\r\n  m.Efetivado = '1' and\r\n  m.Desefetivado = '0' and\r\n  mp.Efetivado_Estoque = '1' and mp.Desefetivado_Estoque = '0' and mp.Tipo = 'S' and\r\n  mp.Status <> -1 and\r\n  fc.situacao = 'A' and\r\n  (cf.ide = @$Cliente#Cliente or (@$Cliente#Cliente is null)) and\r\n (cast(m.Data as date) between @$Data_Inicial#data and @$Data_Final#data or(@$Data_Inicial#data is null and @$Data_Final#data is null))","Report":"","DataAlteracao":"2022-02-24T16:11:44.1008097-03:00","Status":0}